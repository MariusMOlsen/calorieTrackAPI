// <auto-generated />
using System;
using CalorieTrack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalorieTrack.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240707122441_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CalorieTrack.Domain.Model.Diary", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NutritionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sections")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<Guid>("userGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.ToTable("Diaries");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.DiaryItem", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("DiaryGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InstanceDefinition")
                        .HasColumnType("int");

                    b.Property<Guid>("ItemGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.ToTable("DiaryItems");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.Food.CommonFood", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AmountOfUnit")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstanceDefinition")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NutritionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("credibility")
                        .HasColumnType("bigint");

                    b.HasKey("Guid");

                    b.HasIndex("NutritionGuid");

                    b.ToTable("CommonFoods");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.Food.UserFood", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AmountOfUnit")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NutritionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.HasIndex("NutritionGuid");

                    b.HasIndex("UserId");

                    b.ToTable("UserFoods");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.Meal", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NutritionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.MealItem", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("InstanceDefinition")
                        .HasColumnType("int");

                    b.Property<Guid>("ItemGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MealGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.ToTable("MealsItem");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.Nutrition", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<double>("Carbohydrates")
                        .HasColumnType("float");

                    b.Property<double>("Fat")
                        .HasColumnType("float");

                    b.Property<double>("Protein")
                        .HasColumnType("float");

                    b.Property<Guid>("UnitDefinitionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.ToTable("Nutritions");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.Recepie", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InstanceDefinition")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NutritionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.ToTable("Recepies");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.RecepieItem", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("FoodGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecepieGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.ToTable("RecepieItems");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.UnitDefinition", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NutritionGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("defaultAmount")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.HasIndex("NutritionGuid")
                        .IsUnique();

                    b.ToTable("UnitDefinition");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GoogleUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileType")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.Food.CommonFood", b =>
                {
                    b.HasOne("CalorieTrack.Domain.Model.Nutrition", "Nutrition")
                        .WithMany()
                        .HasForeignKey("NutritionGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nutrition");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.Food.UserFood", b =>
                {
                    b.HasOne("CalorieTrack.Domain.Model.Nutrition", "Nutrition")
                        .WithMany()
                        .HasForeignKey("NutritionGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalorieTrack.Domain.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nutrition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.UnitDefinition", b =>
                {
                    b.HasOne("CalorieTrack.Domain.Model.Nutrition", "Nutrition")
                        .WithOne("UnitDefinition")
                        .HasForeignKey("CalorieTrack.Domain.Model.UnitDefinition", "NutritionGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nutrition");
                });

            modelBuilder.Entity("CalorieTrack.Domain.Model.Nutrition", b =>
                {
                    b.Navigation("UnitDefinition");
                });
#pragma warning restore 612, 618
        }
    }
}
